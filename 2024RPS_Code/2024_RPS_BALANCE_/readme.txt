RPS 2024 赛季工程模板

1.本嵌入式框架分算法层，嵌入层，硬件层，固件库四部分

2.工程文件构成介绍：
	APP（算法层）
		基础算法（BAL）将.c文件添加到source，将.h文件添加到Include
		操作系统（rtos）自带control_task
		控制任务（TASK）底盘
						云台
						发射
						模式选择（需要请自取）直接将文件夹拖入即可
	EMBEDDED（嵌入层）
		CAN_BUS(自带)
		senior（需要使用的传感器与执行模块拖入此文件夹）
		senior_Struct(自带)

	BSP(外设配置层)
		需要的外设请拖入此文件夹
	HEADFILE(头文件)
		public.h（公共头文件）
	STLIB(固件库)
	USER(用户)
		main.c
		BSP.c


3.本框架头文件由public.h下辖：
	公共头文件，工程中每个.c文件必须包含一个.h文件，这些.h文件需要包含公共头文件
		公共头文件包含 
			  固件库
		      工具库
			  数学库
			  外设库
			  传感器
			  算法库
			  控制任务
		（若之后添加的模块中有以上部分，请添加到公共头文件库）

		 
外设初始化在BSP.c下调用

4.所有模块均独立，添加模块步骤
	4.1.打开RPS战队代码仓库： https://github.com/Hermione20/RPS_Embedded_Development_Team.git
	4.2.在仓库主分支里面找寻自己需要的模块
	4.3.复制在自己工程对应的文件夹下(文件夹构成见3)
	4.4.设置头文件路径
	4.5.工作区包含源文件
	4.6.公共头文件下包含该模块头文件
	4.7.阅读该模块注释与使用说明

5.函数调用与接口说明
	BSP层与嵌入层的接口：
			BSP:外设头文件里的使能宏定义和do{}while(解算函数可放入此内)
			嵌入层：senior.h里的电机编码器初位设置
					CAN_BUS.h里的电机id设置
					CAN_BUS.c里的canbus解算函数配置（所有的解算函数与can发送函数均在senior.c里可查找）
					CAN_BUS.c里的can发送任务配置
	嵌入层与算法层的接口：详见senior.c中的统一结构体
						嵌入层：统一的实际意义鲜明的传感器结构体
						算法层：给电机的电流，角度或速度输入