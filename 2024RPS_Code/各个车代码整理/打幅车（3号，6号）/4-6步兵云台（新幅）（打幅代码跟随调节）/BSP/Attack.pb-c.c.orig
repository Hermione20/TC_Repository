/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: Attack.proto */

/* Do not generate deprecated warnings for self */
#ifndef PROTOBUF_C__NO_DEPRECATED
#define PROTOBUF_C__NO_DEPRECATED
#endif

#include "Attack.pb-c.h"
void   attack__init
                     (Attack         *message)
{
  static const Attack init_value = ATTACK__INIT;
  *message = init_value;
}
size_t attack__get_packed_size
                     (const Attack *message)
{
  assert(message->base.descriptor == &attack__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t attack__pack
                     (const Attack *message,
                      uint8_t       *out)
{
  assert(message->base.descriptor == &attack__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t attack__pack_to_buffer
                     (const Attack *message,
                      ProtobufCBuffer *buffer)
{
  assert(message->base.descriptor == &attack__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
Attack *
       attack__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (Attack *)
     protobuf_c_message_unpack (&attack__descriptor,
                                allocator, len, data);
}
void   attack__free_unpacked
                     (Attack *message,
                      ProtobufCAllocator *allocator)
{
  if(!message)
    return;
  assert(message->base.descriptor == &attack__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}
static const ProtobufCEnumValue attack__command_type__enum_values_by_number[2] =
{
  { "WAIT", "ATTACK__COMMAND_TYPE__WAIT", 0 },
  { "FIRE", "ATTACK__COMMAND_TYPE__FIRE", 1 },
};
static const ProtobufCIntRange attack__command_type__value_ranges[] = {
{0, 0},{0, 2}
};
static const ProtobufCEnumValueIndex attack__command_type__enum_values_by_name[2] =
{
  { "FIRE", 1 },
  { "WAIT", 0 },
};
const ProtobufCEnumDescriptor attack__command_type__descriptor =
{
  PROTOBUF_C__ENUM_DESCRIPTOR_MAGIC,
  "Attack.CommandType",
  "CommandType",
  "Attack__CommandType",
  "",
  2,
  attack__command_type__enum_values_by_number,
  2,
  attack__command_type__enum_values_by_name,
  1,
  attack__command_type__value_ranges,
  NULL,NULL,NULL,NULL   /* reserved[1234] */
};
static const ProtobufCFieldDescriptor attack__field_descriptors[4] =
{
  {
    "Yaw",
    1,
    PROTOBUF_C_LABEL_NONE,
    PROTOBUF_C_TYPE_SINT32,
    0,   /* quantifier_offset */
    offsetof(Attack, yaw),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "Pitch",
    2,
    PROTOBUF_C_LABEL_NONE,
    PROTOBUF_C_TYPE_SINT32,
    0,   /* quantifier_offset */
    offsetof(Attack, pitch),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "Number",
    3,
    PROTOBUF_C_LABEL_NONE,
    PROTOBUF_C_TYPE_INT32,
    0,   /* quantifier_offset */
    offsetof(Attack, number),
    NULL,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
  {
    "Command",
    4,
    PROTOBUF_C_LABEL_NONE,
    PROTOBUF_C_TYPE_ENUM,
    0,   /* quantifier_offset */
    offsetof(Attack, command),
    &attack__command_type__descriptor,
    NULL,
    0,             /* flags */
    0,NULL,NULL    /* reserved1,reserved2, etc */
  },
};
static const unsigned attack__field_indices_by_name[] = {
  3,   /* field[3] = Command */
  2,   /* field[2] = Number */
  1,   /* field[1] = Pitch */
  0,   /* field[0] = Yaw */
};
static const ProtobufCIntRange attack__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 4 }
};
const ProtobufCMessageDescriptor attack__descriptor =
{
  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
  "Attack",
  "Attack",
  "Attack",
  "",
  sizeof(Attack),
  4,
  attack__field_descriptors,
  attack__field_indices_by_name,
  1,  attack__number_ranges,
  (ProtobufCMessageInit) attack__init,
  NULL,NULL,NULL    /* reserved[123] */
};
